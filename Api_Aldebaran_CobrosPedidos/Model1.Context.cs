//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Api_Aldebaran_CobrosPedidos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AldebaranPlus_JavierJrEntities : DbContext
    {
        public AldebaranPlus_JavierJrEntities()
            : base("name=AldebaranPlus_JavierJrEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AperturaCaja> AperturaCaja { get; set; }
        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Catalogo> Catalogo { get; set; }
        public virtual DbSet<CatalogoDet> CatalogoDet { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<CategoriaCliente> CategoriaCliente { get; set; }
        public virtual DbSet<CategoriaProveedor> CategoriaProveedor { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ClienteEmail> ClienteEmail { get; set; }
        public virtual DbSet<ClienteInfoAdicional> ClienteInfoAdicional { get; set; }
        public virtual DbSet<Continente> Continente { get; set; }
        public virtual DbSet<CtasCobrar> CtasCobrar { get; set; }
        public virtual DbSet<CtasPagar> CtasPagar { get; set; }
        public virtual DbSet<Denominacion> Denominacion { get; set; }
        public virtual DbSet<DesgloceRubro> DesgloceRubro { get; set; }
        public virtual DbSet<DevCompra> DevCompra { get; set; }
        public virtual DbSet<DevVenta> DevVenta { get; set; }
        public virtual DbSet<Documento> Documento { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EmpleadoRubro> EmpleadoRubro { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Estacion> Estacion { get; set; }
        public virtual DbSet<Fabricante> Fabricante { get; set; }
        public virtual DbSet<FactCompra> FactCompra { get; set; }
        public virtual DbSet<FactVenta> FactVenta { get; set; }
        public virtual DbSet<FlujoDinero> FlujoDinero { get; set; }
        public virtual DbSet<FormaPago> FormaPago { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<Impuesto> Impuesto { get; set; }
        public virtual DbSet<ImpuestoRetencion> ImpuestoRetencion { get; set; }
        public virtual DbSet<ImpuestoTarifa> ImpuestoTarifa { get; set; }
        public virtual DbSet<Kardex> Kardex { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Medida> Medida { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<MotivoMovInv> MotivoMovInv { get; set; }
        public virtual DbSet<MovInvCab> MovInvCab { get; set; }
        public virtual DbSet<Objetos> Objetos { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Parametros> Parametros { get; set; }
        public virtual DbSet<ParametrosGlobales> ParametrosGlobales { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Presentacion> Presentacion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<ProductoImagen> ProductoImagen { get; set; }
        public virtual DbSet<ProductoInfoAdicional> ProductoInfoAdicional { get; set; }
        public virtual DbSet<ProductoUnidad> ProductoUnidad { get; set; }
        public virtual DbSet<ProformaVta> ProformaVta { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<ProveedorEmail> ProveedorEmail { get; set; }
        public virtual DbSet<ProveedorInfoAdicional> ProveedorInfoAdicional { get; set; }
        public virtual DbSet<PuntoVenta> PuntoVenta { get; set; }
        public virtual DbSet<RegionMundo> RegionMundo { get; set; }
        public virtual DbSet<Rubro> Rubro { get; set; }
        public virtual DbSet<RubroCaja> RubroCaja { get; set; }
        public virtual DbSet<Sector> Sector { get; set; }
        public virtual DbSet<SubGrupo> SubGrupo { get; set; }
        public virtual DbSet<SubModulo> SubModulo { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tarjeta> Tarjeta { get; set; }
        public virtual DbSet<TipoDeducible> TipoDeducible { get; set; }
        public virtual DbSet<TipoIdentificacion> TipoIdentificacion { get; set; }
        public virtual DbSet<Unidad> Unidad { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<AperturaCajaDet> AperturaCajaDet { get; set; }
        public virtual DbSet<AperturaCajaDetRubros> AperturaCajaDetRubros { get; set; }
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<CierreCaja> CierreCaja { get; set; }
        public virtual DbSet<DCDetalle> DCDetalle { get; set; }
        public virtual DbSet<DVDetalle> DVDetalle { get; set; }
        public virtual DbSet<FCDetalle> FCDetalle { get; set; }
        public virtual DbSet<FVDetalle> FVDetalle { get; set; }
        public virtual DbSet<Inventario> Inventario { get; set; }
        public virtual DbSet<MovInvDet> MovInvDet { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<ProformaVtaDet> ProformaVtaDet { get; set; }
        public virtual DbSet<RolPagos> RolPagos { get; set; }
        public virtual DbSet<RolPagosIndividual> RolPagosIndividual { get; set; }
        public virtual DbSet<vAperturaCajaCab> vAperturaCajaCab { get; set; }
        public virtual DbSet<vAperturaCajaDet> vAperturaCajaDet { get; set; }
        public virtual DbSet<vAperturaCajaDetRubro> vAperturaCajaDetRubro { get; set; }
        public virtual DbSet<vCierreCaja> vCierreCaja { get; set; }
        public virtual DbSet<vCobros> vCobros { get; set; }
        public virtual DbSet<vCompra> vCompra { get; set; }
        public virtual DbSet<vCompraCab> vCompraCab { get; set; }
        public virtual DbSet<vCompraCabFull> vCompraCabFull { get; set; }
        public virtual DbSet<vFlujoCaja> vFlujoCaja { get; set; }
        public virtual DbSet<vNCCompras> vNCCompras { get; set; }
        public virtual DbSet<vNCComprasCab> vNCComprasCab { get; set; }
        public virtual DbSet<vNCVentas> vNCVentas { get; set; }
        public virtual DbSet<vNCVentasCab> vNCVentasCab { get; set; }
        public virtual DbSet<vPagos> vPagos { get; set; }
        public virtual DbSet<vProformaVta> vProformaVta { get; set; }
        public virtual DbSet<vProformaVtaCab> vProformaVtaCab { get; set; }
        public virtual DbSet<vRolPagos> vRolPagos { get; set; }
        public virtual DbSet<vRolPagosIndividual> vRolPagosIndividual { get; set; }
        public virtual DbSet<vStock> vStock { get; set; }
        public virtual DbSet<vTransaccion> vTransaccion { get; set; }
        public virtual DbSet<vTransaccionEgreso> vTransaccionEgreso { get; set; }
        public virtual DbSet<vTransaccionIngreso> vTransaccionIngreso { get; set; }
        public virtual DbSet<vVenta> vVenta { get; set; }
        public virtual DbSet<vVentaCab> vVentaCab { get; set; }
        public virtual DbSet<vVentaCabFull> vVentaCabFull { get; set; }
    
        public virtual ObjectResult<Sel_AllSucursal_Result> Sel_AllSucursal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_AllSucursal_Result>("Sel_AllSucursal");
        }
    
        public virtual ObjectResult<Sel_FacCV_Result> Sel_FacCV(string accion, string fechaIni, string fechaFin, Nullable<int> iDSU)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_FacCV_Result>("Sel_FacCV", accionParameter, fechaIniParameter, fechaFinParameter, iDSUParameter);
        }
    
        public virtual ObjectResult<Sel_ProdSotckBajo_Result> Sel_ProdSotckBajo(string aCCION, Nullable<int> iDSU)
        {
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ProdSotckBajo_Result>("Sel_ProdSotckBajo", aCCIONParameter, iDSUParameter);
        }
    
        public virtual ObjectResult<Sel_ResProdSotckBajo_Result> Sel_ResProdSotckBajo(string aCCION, Nullable<int> iDSU)
        {
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ResProdSotckBajo_Result>("Sel_ResProdSotckBajo", aCCIONParameter, iDSUParameter);
        }
    
        public virtual ObjectResult<Sel_SumFacCV_Anos_Result> Sel_SumFacCV_Anos(string accion, Nullable<bool> isAnoActual, Nullable<int> iDSU)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var isAnoActualParameter = isAnoActual.HasValue ?
                new ObjectParameter("isAnoActual", isAnoActual) :
                new ObjectParameter("isAnoActual", typeof(bool));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_SumFacCV_Anos_Result>("Sel_SumFacCV_Anos", accionParameter, isAnoActualParameter, iDSUParameter);
        }
    
        public virtual ObjectResult<Sel_UsuarioCajas_Result> Sel_UsuarioCajas(Nullable<int> iDSU, Nullable<int> iDPT)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPTParameter = iDPT.HasValue ?
                new ObjectParameter("IDPT", iDPT) :
                new ObjectParameter("IDPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_UsuarioCajas_Result>("Sel_UsuarioCajas", iDSUParameter, iDPTParameter);
        }
    
        public virtual ObjectResult<Sel_ValCajaPV_Result> Sel_ValCajaPV(Nullable<int> iDSU)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ValCajaPV_Result>("Sel_ValCajaPV", iDSUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Create_LinkedServer(string tipo, string servidor, string @base, string usuario, string clave, ObjectParameter existente)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("Servidor", servidor) :
                new ObjectParameter("Servidor", typeof(string));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Create_LinkedServer", tipoParameter, servidorParameter, baseParameter, usuarioParameter, claveParameter, existente);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_AperturaCaja(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_AperturaCaja", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_CategoriaCliente(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_CategoriaCliente", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_CategoriaProveedor(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_CategoriaProveedor", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Ciudad(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Ciudad", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Cliente(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Cliente", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Continente(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Continente", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Denominacion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Denominacion", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_DesgloceRubro(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_DesgloceRubro", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Documento(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Documento", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Empresa(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Empresa", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Estacion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Estacion", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Fabricante(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Fabricante", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_FormaPago(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_FormaPago", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Impuesto(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Impuesto", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_ImpuestoRetencion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_ImpuestoRetencion", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_ImpuestoTarifa(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_ImpuestoTarifa", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Marca(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Marca", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Modulo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Modulo", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Objeto(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Objeto", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Pais(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Pais", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Perfil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Perfil", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Producto(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Producto", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Proveedor(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Proveedor", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_RegionMundo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_RegionMundo", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Sector(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Sector", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_SubModulo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_SubModulo", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_Sucursal(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_Sucursal", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_TipoDeducible(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_TipoDeducible", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Del_TipoIdentificacion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Del_TipoIdentificacion", iDParameter);
        }
    
        public virtual int Ins_AperturaCaja(Nullable<int> iDPtoVenta, Nullable<int> iDUsuario, Nullable<decimal> montoEfectivo, Nullable<decimal> montoOtros, string observaciones, ObjectParameter iDAperturaAnt, ObjectParameter fechaAnt, ObjectParameter montoAnt)
        {
            var iDPtoVentaParameter = iDPtoVenta.HasValue ?
                new ObjectParameter("IDPtoVenta", iDPtoVenta) :
                new ObjectParameter("IDPtoVenta", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var montoEfectivoParameter = montoEfectivo.HasValue ?
                new ObjectParameter("MontoEfectivo", montoEfectivo) :
                new ObjectParameter("MontoEfectivo", typeof(decimal));
    
            var montoOtrosParameter = montoOtros.HasValue ?
                new ObjectParameter("MontoOtros", montoOtros) :
                new ObjectParameter("MontoOtros", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_AperturaCaja", iDPtoVentaParameter, iDUsuarioParameter, montoEfectivoParameter, montoOtrosParameter, observacionesParameter, iDAperturaAnt, fechaAnt, montoAnt);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_CategoriaCliente(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_CategoriaCliente", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_CategoriaProveedor(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_CategoriaProveedor", nombreParameter, estadoParameter);
        }
    
        public virtual int Ins_CierreCaja(string accion, Nullable<int> iDPtoVenta, Nullable<int> iDUsuario, Nullable<decimal> montoEfectivo, Nullable<decimal> montoOtros, string observaciones, ObjectParameter iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDPtoVentaParameter = iDPtoVenta.HasValue ?
                new ObjectParameter("IDPtoVenta", iDPtoVenta) :
                new ObjectParameter("IDPtoVenta", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var montoEfectivoParameter = montoEfectivo.HasValue ?
                new ObjectParameter("MontoEfectivo", montoEfectivo) :
                new ObjectParameter("MontoEfectivo", typeof(decimal));
    
            var montoOtrosParameter = montoOtros.HasValue ?
                new ObjectParameter("MontoOtros", montoOtros) :
                new ObjectParameter("MontoOtros", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_CierreCaja", accionParameter, iDPtoVentaParameter, iDUsuarioParameter, montoEfectivoParameter, montoOtrosParameter, observacionesParameter, iD);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Ciudad(Nullable<int> iDPais, string nombre, string codigo, Nullable<bool> estado)
        {
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Ciudad", iDPaisParameter, nombreParameter, codigoParameter, estadoParameter);
        }
    
        public virtual int Ins_Cliente(Nullable<int> iDCategoria, Nullable<int> iDCiudad, Nullable<int> iDTipoIdentificacion, string identificacion, string nombre, string direccion, string telefono, string celular, string email, Nullable<bool> sujetoRetencion, string tipoContribuyente, string tipoEntidad, string tipo, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var iDTipoIdentificacionParameter = iDTipoIdentificacion.HasValue ?
                new ObjectParameter("IDTipoIdentificacion", iDTipoIdentificacion) :
                new ObjectParameter("IDTipoIdentificacion", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sujetoRetencionParameter = sujetoRetencion.HasValue ?
                new ObjectParameter("SujetoRetencion", sujetoRetencion) :
                new ObjectParameter("SujetoRetencion", typeof(bool));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("TipoEntidad", tipoEntidad) :
                new ObjectParameter("TipoEntidad", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Cliente", iDCategoriaParameter, iDCiudadParameter, iDTipoIdentificacionParameter, identificacionParameter, nombreParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, sujetoRetencionParameter, tipoContribuyenteParameter, tipoEntidadParameter, tipoParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Continente(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Continente", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_CtasCobrar(Nullable<int> iDSU, Nullable<int> iDPtoVta, Nullable<int> iDFV, Nullable<int> iDUS, Nullable<int> iDEP, Nullable<System.DateTime> fecha, string tipo, string formaPago, Nullable<decimal> valor, Nullable<decimal> saldo, Nullable<decimal> porcentajeComision, Nullable<decimal> comision, string estado)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPtoVtaParameter = iDPtoVta.HasValue ?
                new ObjectParameter("IDPtoVta", iDPtoVta) :
                new ObjectParameter("IDPtoVta", typeof(int));
    
            var iDFVParameter = iDFV.HasValue ?
                new ObjectParameter("IDFV", iDFV) :
                new ObjectParameter("IDFV", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDEPParameter = iDEP.HasValue ?
                new ObjectParameter("IDEP", iDEP) :
                new ObjectParameter("IDEP", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var porcentajeComisionParameter = porcentajeComision.HasValue ?
                new ObjectParameter("PorcentajeComision", porcentajeComision) :
                new ObjectParameter("PorcentajeComision", typeof(decimal));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_CtasCobrar", iDSUParameter, iDPtoVtaParameter, iDFVParameter, iDUSParameter, iDEPParameter, fechaParameter, tipoParameter, formaPagoParameter, valorParameter, saldoParameter, porcentajeComisionParameter, comisionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_CtasCobrarTarjeta(Nullable<int> iDSU, Nullable<int> iDFV, Nullable<int> iDUS, Nullable<int> iDEP, Nullable<System.DateTime> fecha, string tipo, string formaPago, Nullable<decimal> valor, Nullable<decimal> saldo, Nullable<decimal> porcentajeComision, Nullable<decimal> comision, string estado, Nullable<int> iDTJ)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDFVParameter = iDFV.HasValue ?
                new ObjectParameter("IDFV", iDFV) :
                new ObjectParameter("IDFV", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDEPParameter = iDEP.HasValue ?
                new ObjectParameter("IDEP", iDEP) :
                new ObjectParameter("IDEP", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var porcentajeComisionParameter = porcentajeComision.HasValue ?
                new ObjectParameter("PorcentajeComision", porcentajeComision) :
                new ObjectParameter("PorcentajeComision", typeof(decimal));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var iDTJParameter = iDTJ.HasValue ?
                new ObjectParameter("IDTJ", iDTJ) :
                new ObjectParameter("IDTJ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_CtasCobrarTarjeta", iDSUParameter, iDFVParameter, iDUSParameter, iDEPParameter, fechaParameter, tipoParameter, formaPagoParameter, valorParameter, saldoParameter, porcentajeComisionParameter, comisionParameter, estadoParameter, iDTJParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_CtasPagar(Nullable<int> iDSU, Nullable<int> iDPtoVta, Nullable<int> iDFC, Nullable<int> iDUS, Nullable<System.DateTime> fecha, string formaPago, Nullable<decimal> valor, Nullable<decimal> saldo, string estado)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPtoVtaParameter = iDPtoVta.HasValue ?
                new ObjectParameter("IDPtoVta", iDPtoVta) :
                new ObjectParameter("IDPtoVta", typeof(int));
    
            var iDFCParameter = iDFC.HasValue ?
                new ObjectParameter("IDFC", iDFC) :
                new ObjectParameter("IDFC", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_CtasPagar", iDSUParameter, iDPtoVtaParameter, iDFCParameter, iDUSParameter, fechaParameter, formaPagoParameter, valorParameter, saldoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Denominacion(string nombre, Nullable<decimal> valor, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Denominacion", nombreParameter, valorParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_DesgloceRubro(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_DesgloceRubro", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_DevCompra(Nullable<int> iDSU, Nullable<int> iDPV, Nullable<int> iDFC, Nullable<int> iDUS, Nullable<System.DateTime> fecha, string autorizacion, string numero, Nullable<decimal> subtotalIVA, Nullable<decimal> subtotalIVA0, Nullable<decimal> subtotal, Nullable<decimal> porcentajeDesc, Nullable<decimal> descuento, Nullable<decimal> iVA, Nullable<decimal> total, string estado)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPVParameter = iDPV.HasValue ?
                new ObjectParameter("IDPV", iDPV) :
                new ObjectParameter("IDPV", typeof(int));
    
            var iDFCParameter = iDFC.HasValue ?
                new ObjectParameter("IDFC", iDFC) :
                new ObjectParameter("IDFC", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var autorizacionParameter = autorizacion != null ?
                new ObjectParameter("Autorizacion", autorizacion) :
                new ObjectParameter("Autorizacion", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var subtotalIVAParameter = subtotalIVA.HasValue ?
                new ObjectParameter("SubtotalIVA", subtotalIVA) :
                new ObjectParameter("SubtotalIVA", typeof(decimal));
    
            var subtotalIVA0Parameter = subtotalIVA0.HasValue ?
                new ObjectParameter("SubtotalIVA0", subtotalIVA0) :
                new ObjectParameter("SubtotalIVA0", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(decimal));
    
            var porcentajeDescParameter = porcentajeDesc.HasValue ?
                new ObjectParameter("PorcentajeDesc", porcentajeDesc) :
                new ObjectParameter("PorcentajeDesc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_DevCompra", iDSUParameter, iDPVParameter, iDFCParameter, iDUSParameter, fechaParameter, autorizacionParameter, numeroParameter, subtotalIVAParameter, subtotalIVA0Parameter, subtotalParameter, porcentajeDescParameter, descuentoParameter, iVAParameter, totalParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Documento(string nombre, string sigla, Nullable<bool> sRI, string codigoSRI, Nullable<bool> electronico, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("Sigla", sigla) :
                new ObjectParameter("Sigla", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var electronicoParameter = electronico.HasValue ?
                new ObjectParameter("Electronico", electronico) :
                new ObjectParameter("Electronico", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Documento", nombreParameter, siglaParameter, sRIParameter, codigoSRIParameter, electronicoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Empresa(Nullable<int> iDCiudad, string rUC, string razonSocial, string nombreComercial, string tipoContribuyente, Nullable<bool> obligContabilidad, Nullable<bool> contEspecial, string numResolucion, Nullable<System.DateTime> fechaResolucion, string direccion, string telefono, string celular, string email, string representNombre, string representIdentificacion, string representCelular, string representEmail, string contadorNombre, string contadorIdentificacion, string contadorCelular, string contadorEmail, byte[] logo, Nullable<bool> emisorFE, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var nombreComercialParameter = nombreComercial != null ?
                new ObjectParameter("NombreComercial", nombreComercial) :
                new ObjectParameter("NombreComercial", typeof(string));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var obligContabilidadParameter = obligContabilidad.HasValue ?
                new ObjectParameter("ObligContabilidad", obligContabilidad) :
                new ObjectParameter("ObligContabilidad", typeof(bool));
    
            var contEspecialParameter = contEspecial.HasValue ?
                new ObjectParameter("ContEspecial", contEspecial) :
                new ObjectParameter("ContEspecial", typeof(bool));
    
            var numResolucionParameter = numResolucion != null ?
                new ObjectParameter("NumResolucion", numResolucion) :
                new ObjectParameter("NumResolucion", typeof(string));
    
            var fechaResolucionParameter = fechaResolucion.HasValue ?
                new ObjectParameter("FechaResolucion", fechaResolucion) :
                new ObjectParameter("FechaResolucion", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var representNombreParameter = representNombre != null ?
                new ObjectParameter("RepresentNombre", representNombre) :
                new ObjectParameter("RepresentNombre", typeof(string));
    
            var representIdentificacionParameter = representIdentificacion != null ?
                new ObjectParameter("RepresentIdentificacion", representIdentificacion) :
                new ObjectParameter("RepresentIdentificacion", typeof(string));
    
            var representCelularParameter = representCelular != null ?
                new ObjectParameter("RepresentCelular", representCelular) :
                new ObjectParameter("RepresentCelular", typeof(string));
    
            var representEmailParameter = representEmail != null ?
                new ObjectParameter("RepresentEmail", representEmail) :
                new ObjectParameter("RepresentEmail", typeof(string));
    
            var contadorNombreParameter = contadorNombre != null ?
                new ObjectParameter("ContadorNombre", contadorNombre) :
                new ObjectParameter("ContadorNombre", typeof(string));
    
            var contadorIdentificacionParameter = contadorIdentificacion != null ?
                new ObjectParameter("ContadorIdentificacion", contadorIdentificacion) :
                new ObjectParameter("ContadorIdentificacion", typeof(string));
    
            var contadorCelularParameter = contadorCelular != null ?
                new ObjectParameter("ContadorCelular", contadorCelular) :
                new ObjectParameter("ContadorCelular", typeof(string));
    
            var contadorEmailParameter = contadorEmail != null ?
                new ObjectParameter("ContadorEmail", contadorEmail) :
                new ObjectParameter("ContadorEmail", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(byte[]));
    
            var emisorFEParameter = emisorFE.HasValue ?
                new ObjectParameter("EmisorFE", emisorFE) :
                new ObjectParameter("EmisorFE", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Empresa", iDCiudadParameter, rUCParameter, razonSocialParameter, nombreComercialParameter, tipoContribuyenteParameter, obligContabilidadParameter, contEspecialParameter, numResolucionParameter, fechaResolucionParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, representNombreParameter, representIdentificacionParameter, representCelularParameter, representEmailParameter, contadorNombreParameter, contadorIdentificacionParameter, contadorCelularParameter, contadorEmailParameter, logoParameter, emisorFEParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Estacion(string nombre, string tipo, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Estacion", nombreParameter, tipoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Fabricante(Nullable<int> iDPais, string nombre, Nullable<bool> estado)
        {
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Fabricante", iDPaisParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int Ins_FactCompra(Nullable<int> iDSU, Nullable<int> iDPT, Nullable<int> iDPV, Nullable<int> iDUS, Nullable<System.DateTime> fecha, string tipo, string autorizacion, string numero, string formaPago, Nullable<decimal> subtotalIVA, Nullable<decimal> subtotalIVA0, Nullable<decimal> subtotal, Nullable<decimal> porcentajeDesc, Nullable<decimal> descuento, Nullable<decimal> subtotalIVADesc, Nullable<decimal> subtotalIVA0Desc, Nullable<decimal> iVA, Nullable<decimal> total, Nullable<decimal> saldo, string estado, ObjectParameter iDDuplicadoOut)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPTParameter = iDPT.HasValue ?
                new ObjectParameter("IDPT", iDPT) :
                new ObjectParameter("IDPT", typeof(int));
    
            var iDPVParameter = iDPV.HasValue ?
                new ObjectParameter("IDPV", iDPV) :
                new ObjectParameter("IDPV", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var autorizacionParameter = autorizacion != null ?
                new ObjectParameter("Autorizacion", autorizacion) :
                new ObjectParameter("Autorizacion", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var subtotalIVAParameter = subtotalIVA.HasValue ?
                new ObjectParameter("SubtotalIVA", subtotalIVA) :
                new ObjectParameter("SubtotalIVA", typeof(decimal));
    
            var subtotalIVA0Parameter = subtotalIVA0.HasValue ?
                new ObjectParameter("SubtotalIVA0", subtotalIVA0) :
                new ObjectParameter("SubtotalIVA0", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(decimal));
    
            var porcentajeDescParameter = porcentajeDesc.HasValue ?
                new ObjectParameter("PorcentajeDesc", porcentajeDesc) :
                new ObjectParameter("PorcentajeDesc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var subtotalIVADescParameter = subtotalIVADesc.HasValue ?
                new ObjectParameter("SubtotalIVADesc", subtotalIVADesc) :
                new ObjectParameter("SubtotalIVADesc", typeof(decimal));
    
            var subtotalIVA0DescParameter = subtotalIVA0Desc.HasValue ?
                new ObjectParameter("SubtotalIVA0Desc", subtotalIVA0Desc) :
                new ObjectParameter("SubtotalIVA0Desc", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_FactCompra", iDSUParameter, iDPTParameter, iDPVParameter, iDUSParameter, fechaParameter, tipoParameter, autorizacionParameter, numeroParameter, formaPagoParameter, subtotalIVAParameter, subtotalIVA0Parameter, subtotalParameter, porcentajeDescParameter, descuentoParameter, subtotalIVADescParameter, subtotalIVA0DescParameter, iVAParameter, totalParameter, saldoParameter, estadoParameter, iDDuplicadoOut);
        }
    
        public virtual int Ins_FactVenta(Nullable<int> iDCT, Nullable<int> iDSU, Nullable<int> iDPT, Nullable<int> iDUS, Nullable<int> iDEP, Nullable<System.DateTime> fecha, string tipo, string formaPago, Nullable<decimal> porcentajeComision, Nullable<decimal> comision, Nullable<decimal> subtotalIVA, Nullable<decimal> subtotalIVA0, Nullable<decimal> subtotal, Nullable<decimal> porcentajeDesc, Nullable<decimal> descuento, Nullable<decimal> subtotalIVADesc, Nullable<decimal> subtotalIVA0Desc, Nullable<decimal> iVA, Nullable<decimal> total, Nullable<decimal> saldo, string estado, Nullable<decimal> efectivo, Nullable<decimal> cambio, Nullable<bool> impreso, ObjectParameter numeroOut, ObjectParameter mensajeOut)
        {
            var iDCTParameter = iDCT.HasValue ?
                new ObjectParameter("IDCT", iDCT) :
                new ObjectParameter("IDCT", typeof(int));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPTParameter = iDPT.HasValue ?
                new ObjectParameter("IDPT", iDPT) :
                new ObjectParameter("IDPT", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDEPParameter = iDEP.HasValue ?
                new ObjectParameter("IDEP", iDEP) :
                new ObjectParameter("IDEP", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var porcentajeComisionParameter = porcentajeComision.HasValue ?
                new ObjectParameter("PorcentajeComision", porcentajeComision) :
                new ObjectParameter("PorcentajeComision", typeof(decimal));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(decimal));
    
            var subtotalIVAParameter = subtotalIVA.HasValue ?
                new ObjectParameter("SubtotalIVA", subtotalIVA) :
                new ObjectParameter("SubtotalIVA", typeof(decimal));
    
            var subtotalIVA0Parameter = subtotalIVA0.HasValue ?
                new ObjectParameter("SubtotalIVA0", subtotalIVA0) :
                new ObjectParameter("SubtotalIVA0", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(decimal));
    
            var porcentajeDescParameter = porcentajeDesc.HasValue ?
                new ObjectParameter("PorcentajeDesc", porcentajeDesc) :
                new ObjectParameter("PorcentajeDesc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var subtotalIVADescParameter = subtotalIVADesc.HasValue ?
                new ObjectParameter("SubtotalIVADesc", subtotalIVADesc) :
                new ObjectParameter("SubtotalIVADesc", typeof(decimal));
    
            var subtotalIVA0DescParameter = subtotalIVA0Desc.HasValue ?
                new ObjectParameter("SubtotalIVA0Desc", subtotalIVA0Desc) :
                new ObjectParameter("SubtotalIVA0Desc", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var efectivoParameter = efectivo.HasValue ?
                new ObjectParameter("Efectivo", efectivo) :
                new ObjectParameter("Efectivo", typeof(decimal));
    
            var cambioParameter = cambio.HasValue ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(decimal));
    
            var impresoParameter = impreso.HasValue ?
                new ObjectParameter("Impreso", impreso) :
                new ObjectParameter("Impreso", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_FactVenta", iDCTParameter, iDSUParameter, iDPTParameter, iDUSParameter, iDEPParameter, fechaParameter, tipoParameter, formaPagoParameter, porcentajeComisionParameter, comisionParameter, subtotalIVAParameter, subtotalIVA0Parameter, subtotalParameter, porcentajeDescParameter, descuentoParameter, subtotalIVADescParameter, subtotalIVA0DescParameter, iVAParameter, totalParameter, saldoParameter, estadoParameter, efectivoParameter, cambioParameter, impresoParameter, numeroOut, mensajeOut);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_FlujoDinero(Nullable<int> iDSU, Nullable<int> iDPtaVta, Nullable<int> iDUS, Nullable<int> iDRC, Nullable<System.DateTime> fecha, string tipo, string entidad, Nullable<decimal> valor, string glosa)
        {
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDPtaVtaParameter = iDPtaVta.HasValue ?
                new ObjectParameter("IDPtaVta", iDPtaVta) :
                new ObjectParameter("IDPtaVta", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDRCParameter = iDRC.HasValue ?
                new ObjectParameter("IDRC", iDRC) :
                new ObjectParameter("IDRC", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var entidadParameter = entidad != null ?
                new ObjectParameter("Entidad", entidad) :
                new ObjectParameter("Entidad", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_FlujoDinero", iDSUParameter, iDPtaVtaParameter, iDUSParameter, iDRCParameter, fechaParameter, tipoParameter, entidadParameter, valorParameter, glosaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_FormaPago(string codigoSRI, string nombre, Nullable<bool> sRI, Nullable<bool> estado)
        {
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_FormaPago", codigoSRIParameter, nombreParameter, sRIParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Impuesto(string codigo, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<bool> estado)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Impuesto", codigoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_ImpuestoRetencion(Nullable<int> iDImpuesto, string codigo, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<bool> personaNatural, Nullable<bool> personaJuridica, Nullable<bool> bienes, Nullable<bool> servicios, Nullable<bool> otros, Nullable<bool> estado)
        {
            var iDImpuestoParameter = iDImpuesto.HasValue ?
                new ObjectParameter("IDImpuesto", iDImpuesto) :
                new ObjectParameter("IDImpuesto", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var personaNaturalParameter = personaNatural.HasValue ?
                new ObjectParameter("PersonaNatural", personaNatural) :
                new ObjectParameter("PersonaNatural", typeof(bool));
    
            var personaJuridicaParameter = personaJuridica.HasValue ?
                new ObjectParameter("PersonaJuridica", personaJuridica) :
                new ObjectParameter("PersonaJuridica", typeof(bool));
    
            var bienesParameter = bienes.HasValue ?
                new ObjectParameter("Bienes", bienes) :
                new ObjectParameter("Bienes", typeof(bool));
    
            var serviciosParameter = servicios.HasValue ?
                new ObjectParameter("Servicios", servicios) :
                new ObjectParameter("Servicios", typeof(bool));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_ImpuestoRetencion", iDImpuestoParameter, codigoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, personaNaturalParameter, personaJuridicaParameter, bienesParameter, serviciosParameter, otrosParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_ImpuestoTarifa(Nullable<int> iDImpuesto, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<decimal> valor, string tipoTarifa, Nullable<bool> estado)
        {
            var iDImpuestoParameter = iDImpuesto.HasValue ?
                new ObjectParameter("IDImpuesto", iDImpuesto) :
                new ObjectParameter("IDImpuesto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var tipoTarifaParameter = tipoTarifa != null ?
                new ObjectParameter("TipoTarifa", tipoTarifa) :
                new ObjectParameter("TipoTarifa", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_ImpuestoTarifa", iDImpuestoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, valorParameter, tipoTarifaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Marca(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Marca", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Modulo(string nombre, Nullable<short> orden, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Modulo", nombreParameter, ordenParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_MovInvCab(Nullable<int> iDUS, Nullable<int> iDSU, Nullable<int> iDMT, string glosa, string tipo, string estado)
        {
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            var iDMTParameter = iDMT.HasValue ?
                new ObjectParameter("IDMT", iDMT) :
                new ObjectParameter("IDMT", typeof(int));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_MovInvCab", iDUSParameter, iDSUParameter, iDMTParameter, glosaParameter, tipoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Objeto(Nullable<int> iDSubModulo, string ensamblado, string nombre, string titulo, string tipo, Nullable<bool> ejecutable, Nullable<short> orden, Nullable<bool> estado)
        {
            var iDSubModuloParameter = iDSubModulo.HasValue ?
                new ObjectParameter("IDSubModulo", iDSubModulo) :
                new ObjectParameter("IDSubModulo", typeof(int));
    
            var ensambladoParameter = ensamblado != null ?
                new ObjectParameter("Ensamblado", ensamblado) :
                new ObjectParameter("Ensamblado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var ejecutableParameter = ejecutable.HasValue ?
                new ObjectParameter("Ejecutable", ejecutable) :
                new ObjectParameter("Ejecutable", typeof(bool));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Objeto", iDSubModuloParameter, ensambladoParameter, nombreParameter, tituloParameter, tipoParameter, ejecutableParameter, ordenParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Pais(Nullable<int> iDRegion, string nombre, string codigo, Nullable<bool> estado)
        {
            var iDRegionParameter = iDRegion.HasValue ?
                new ObjectParameter("IDRegion", iDRegion) :
                new ObjectParameter("IDRegion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Pais", iDRegionParameter, nombreParameter, codigoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Perfil(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Perfil", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Producto(Nullable<int> iDFB, Nullable<int> iDCT, Nullable<int> iDGP, Nullable<int> iDSG, Nullable<int> iDPRE, Nullable<int> iDMD, Nullable<int> iDUnidad, string codigo, string nombre, Nullable<decimal> costo, Nullable<decimal> pVP, Nullable<decimal> pVM, Nullable<decimal> descuento, Nullable<bool> iVA, Nullable<decimal> comision, Nullable<decimal> pCP, string tipo, Nullable<bool> estado, byte[] imagen)
        {
            var iDFBParameter = iDFB.HasValue ?
                new ObjectParameter("IDFB", iDFB) :
                new ObjectParameter("IDFB", typeof(int));
    
            var iDCTParameter = iDCT.HasValue ?
                new ObjectParameter("IDCT", iDCT) :
                new ObjectParameter("IDCT", typeof(int));
    
            var iDGPParameter = iDGP.HasValue ?
                new ObjectParameter("IDGP", iDGP) :
                new ObjectParameter("IDGP", typeof(int));
    
            var iDSGParameter = iDSG.HasValue ?
                new ObjectParameter("IDSG", iDSG) :
                new ObjectParameter("IDSG", typeof(int));
    
            var iDPREParameter = iDPRE.HasValue ?
                new ObjectParameter("IDPRE", iDPRE) :
                new ObjectParameter("IDPRE", typeof(int));
    
            var iDMDParameter = iDMD.HasValue ?
                new ObjectParameter("IDMD", iDMD) :
                new ObjectParameter("IDMD", typeof(int));
    
            var iDUnidadParameter = iDUnidad.HasValue ?
                new ObjectParameter("IDUnidad", iDUnidad) :
                new ObjectParameter("IDUnidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            var pVPParameter = pVP.HasValue ?
                new ObjectParameter("PVP", pVP) :
                new ObjectParameter("PVP", typeof(decimal));
    
            var pVMParameter = pVM.HasValue ?
                new ObjectParameter("PVM", pVM) :
                new ObjectParameter("PVM", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(bool));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(decimal));
    
            var pCPParameter = pCP.HasValue ?
                new ObjectParameter("PCP", pCP) :
                new ObjectParameter("PCP", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Producto", iDFBParameter, iDCTParameter, iDGPParameter, iDSGParameter, iDPREParameter, iDMDParameter, iDUnidadParameter, codigoParameter, nombreParameter, costoParameter, pVPParameter, pVMParameter, descuentoParameter, iVAParameter, comisionParameter, pCPParameter, tipoParameter, estadoParameter, imagenParameter);
        }
    
        public virtual int Ins_ProductoNew(Nullable<int> iDUsuario, Nullable<int> iDFabricante, Nullable<int> iDCategoria, Nullable<int> iDGrupo, Nullable<int> iDSubGrupo, Nullable<int> iDPresentacion, Nullable<int> iDMarca, Nullable<int> iDUnidad, Nullable<int> iDDeducible, Nullable<int> iDIVA, Nullable<int> iDIRBP, Nullable<int> iDICE, Nullable<int> iDRetencionIVA, Nullable<int> iDRetencionIR, string codigo, string codigoExterno, string nombre, Nullable<decimal> costo, Nullable<decimal> pCP, Nullable<decimal> pVP, Nullable<decimal> pVM, string tipo, Nullable<bool> iVA, Nullable<bool> iRBP, Nullable<bool> iCE, Nullable<bool> serie, Nullable<bool> combo, Nullable<decimal> minimo, Nullable<decimal> maximo, string observaciones, Nullable<bool> estado, byte[] imagen, ObjectParameter iDDuplicado)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDFabricanteParameter = iDFabricante.HasValue ?
                new ObjectParameter("IDFabricante", iDFabricante) :
                new ObjectParameter("IDFabricante", typeof(int));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDGrupoParameter = iDGrupo.HasValue ?
                new ObjectParameter("IDGrupo", iDGrupo) :
                new ObjectParameter("IDGrupo", typeof(int));
    
            var iDSubGrupoParameter = iDSubGrupo.HasValue ?
                new ObjectParameter("IDSubGrupo", iDSubGrupo) :
                new ObjectParameter("IDSubGrupo", typeof(int));
    
            var iDPresentacionParameter = iDPresentacion.HasValue ?
                new ObjectParameter("IDPresentacion", iDPresentacion) :
                new ObjectParameter("IDPresentacion", typeof(int));
    
            var iDMarcaParameter = iDMarca.HasValue ?
                new ObjectParameter("IDMarca", iDMarca) :
                new ObjectParameter("IDMarca", typeof(int));
    
            var iDUnidadParameter = iDUnidad.HasValue ?
                new ObjectParameter("IDUnidad", iDUnidad) :
                new ObjectParameter("IDUnidad", typeof(int));
    
            var iDDeducibleParameter = iDDeducible.HasValue ?
                new ObjectParameter("IDDeducible", iDDeducible) :
                new ObjectParameter("IDDeducible", typeof(int));
    
            var iDIVAParameter = iDIVA.HasValue ?
                new ObjectParameter("IDIVA", iDIVA) :
                new ObjectParameter("IDIVA", typeof(int));
    
            var iDIRBPParameter = iDIRBP.HasValue ?
                new ObjectParameter("IDIRBP", iDIRBP) :
                new ObjectParameter("IDIRBP", typeof(int));
    
            var iDICEParameter = iDICE.HasValue ?
                new ObjectParameter("IDICE", iDICE) :
                new ObjectParameter("IDICE", typeof(int));
    
            var iDRetencionIVAParameter = iDRetencionIVA.HasValue ?
                new ObjectParameter("IDRetencionIVA", iDRetencionIVA) :
                new ObjectParameter("IDRetencionIVA", typeof(int));
    
            var iDRetencionIRParameter = iDRetencionIR.HasValue ?
                new ObjectParameter("IDRetencionIR", iDRetencionIR) :
                new ObjectParameter("IDRetencionIR", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoExternoParameter = codigoExterno != null ?
                new ObjectParameter("CodigoExterno", codigoExterno) :
                new ObjectParameter("CodigoExterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            var pCPParameter = pCP.HasValue ?
                new ObjectParameter("PCP", pCP) :
                new ObjectParameter("PCP", typeof(decimal));
    
            var pVPParameter = pVP.HasValue ?
                new ObjectParameter("PVP", pVP) :
                new ObjectParameter("PVP", typeof(decimal));
    
            var pVMParameter = pVM.HasValue ?
                new ObjectParameter("PVM", pVM) :
                new ObjectParameter("PVM", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(bool));
    
            var iRBPParameter = iRBP.HasValue ?
                new ObjectParameter("IRBP", iRBP) :
                new ObjectParameter("IRBP", typeof(bool));
    
            var iCEParameter = iCE.HasValue ?
                new ObjectParameter("ICE", iCE) :
                new ObjectParameter("ICE", typeof(bool));
    
            var serieParameter = serie.HasValue ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(bool));
    
            var comboParameter = combo.HasValue ?
                new ObjectParameter("Combo", combo) :
                new ObjectParameter("Combo", typeof(bool));
    
            var minimoParameter = minimo.HasValue ?
                new ObjectParameter("Minimo", minimo) :
                new ObjectParameter("Minimo", typeof(decimal));
    
            var maximoParameter = maximo.HasValue ?
                new ObjectParameter("Maximo", maximo) :
                new ObjectParameter("Maximo", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ProductoNew", iDUsuarioParameter, iDFabricanteParameter, iDCategoriaParameter, iDGrupoParameter, iDSubGrupoParameter, iDPresentacionParameter, iDMarcaParameter, iDUnidadParameter, iDDeducibleParameter, iDIVAParameter, iDIRBPParameter, iDICEParameter, iDRetencionIVAParameter, iDRetencionIRParameter, codigoParameter, codigoExternoParameter, nombreParameter, costoParameter, pCPParameter, pVPParameter, pVMParameter, tipoParameter, iVAParameter, iRBPParameter, iCEParameter, serieParameter, comboParameter, minimoParameter, maximoParameter, observacionesParameter, estadoParameter, imagenParameter, iDDuplicado);
        }
    
        public virtual int Ins_ProformaVta(Nullable<int> iDCliente, Nullable<int> iDSucursal, Nullable<int> iDPtoVta, Nullable<int> iDUsuario, Nullable<System.DateTime> fecha, string formaPago, Nullable<decimal> subtotalIVA, Nullable<decimal> subtotalIVA0, Nullable<decimal> subtotal, Nullable<decimal> porcentajeDesc, Nullable<decimal> descuento, Nullable<decimal> subtotalIVADesc, Nullable<decimal> subtotalIVA0Desc, Nullable<decimal> iVA, Nullable<decimal> total, string estado, ObjectParameter numeroOut, ObjectParameter mensajeOut)
        {
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            var iDSucursalParameter = iDSucursal.HasValue ?
                new ObjectParameter("IDSucursal", iDSucursal) :
                new ObjectParameter("IDSucursal", typeof(int));
    
            var iDPtoVtaParameter = iDPtoVta.HasValue ?
                new ObjectParameter("IDPtoVta", iDPtoVta) :
                new ObjectParameter("IDPtoVta", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var subtotalIVAParameter = subtotalIVA.HasValue ?
                new ObjectParameter("SubtotalIVA", subtotalIVA) :
                new ObjectParameter("SubtotalIVA", typeof(decimal));
    
            var subtotalIVA0Parameter = subtotalIVA0.HasValue ?
                new ObjectParameter("SubtotalIVA0", subtotalIVA0) :
                new ObjectParameter("SubtotalIVA0", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(decimal));
    
            var porcentajeDescParameter = porcentajeDesc.HasValue ?
                new ObjectParameter("PorcentajeDesc", porcentajeDesc) :
                new ObjectParameter("PorcentajeDesc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var subtotalIVADescParameter = subtotalIVADesc.HasValue ?
                new ObjectParameter("SubtotalIVADesc", subtotalIVADesc) :
                new ObjectParameter("SubtotalIVADesc", typeof(decimal));
    
            var subtotalIVA0DescParameter = subtotalIVA0Desc.HasValue ?
                new ObjectParameter("SubtotalIVA0Desc", subtotalIVA0Desc) :
                new ObjectParameter("SubtotalIVA0Desc", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ProformaVta", iDClienteParameter, iDSucursalParameter, iDPtoVtaParameter, iDUsuarioParameter, fechaParameter, formaPagoParameter, subtotalIVAParameter, subtotalIVA0Parameter, subtotalParameter, porcentajeDescParameter, descuentoParameter, subtotalIVADescParameter, subtotalIVA0DescParameter, iVAParameter, totalParameter, estadoParameter, numeroOut, mensajeOut);
        }
    
        public virtual int Ins_Proveedor(Nullable<int> iDCategoria, Nullable<int> iDCiudad, Nullable<int> iDTipoIdentificacion, string identificacion, string nombre, string direccion, string telefono, string celular, string email, Nullable<bool> sujetoRetencion, string tipoContribuyente, string tipoEntidad, string tipoEmisor, string autorizacionSRI, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var iDTipoIdentificacionParameter = iDTipoIdentificacion.HasValue ?
                new ObjectParameter("IDTipoIdentificacion", iDTipoIdentificacion) :
                new ObjectParameter("IDTipoIdentificacion", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sujetoRetencionParameter = sujetoRetencion.HasValue ?
                new ObjectParameter("SujetoRetencion", sujetoRetencion) :
                new ObjectParameter("SujetoRetencion", typeof(bool));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("TipoEntidad", tipoEntidad) :
                new ObjectParameter("TipoEntidad", typeof(string));
    
            var tipoEmisorParameter = tipoEmisor != null ?
                new ObjectParameter("TipoEmisor", tipoEmisor) :
                new ObjectParameter("TipoEmisor", typeof(string));
    
            var autorizacionSRIParameter = autorizacionSRI != null ?
                new ObjectParameter("AutorizacionSRI", autorizacionSRI) :
                new ObjectParameter("AutorizacionSRI", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Proveedor", iDCategoriaParameter, iDCiudadParameter, iDTipoIdentificacionParameter, identificacionParameter, nombreParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, sujetoRetencionParameter, tipoContribuyenteParameter, tipoEntidadParameter, tipoEmisorParameter, autorizacionSRIParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_RegionMundo(Nullable<int> iDContinente, string nombre, Nullable<bool> estado)
        {
            var iDContinenteParameter = iDContinente.HasValue ?
                new ObjectParameter("IDContinente", iDContinente) :
                new ObjectParameter("IDContinente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_RegionMundo", iDContinenteParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_RubroRolEmpleado(Nullable<int> iDEmpleado, Nullable<int> iDRubro, Nullable<System.DateTime> fecha, string tipo, Nullable<decimal> valor)
        {
            var iDEmpleadoParameter = iDEmpleado.HasValue ?
                new ObjectParameter("IDEmpleado", iDEmpleado) :
                new ObjectParameter("IDEmpleado", typeof(int));
    
            var iDRubroParameter = iDRubro.HasValue ?
                new ObjectParameter("IDRubro", iDRubro) :
                new ObjectParameter("IDRubro", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_RubroRolEmpleado", iDEmpleadoParameter, iDRubroParameter, fechaParameter, tipoParameter, valorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Sector(Nullable<int> iDCiudad, string nombre, Nullable<bool> estado)
        {
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Sector", iDCiudadParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_SubModulo(Nullable<int> iDModulo, string nombre, Nullable<short> orden, Nullable<bool> estado)
        {
            var iDModuloParameter = iDModulo.HasValue ?
                new ObjectParameter("IDModulo", iDModulo) :
                new ObjectParameter("IDModulo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_SubModulo", iDModuloParameter, nombreParameter, ordenParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_Sucursal(Nullable<int> iDCiudad, string nombre, string direccion, string telefono, string email, string serie, string administrador, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var administradorParameter = administrador != null ?
                new ObjectParameter("Administrador", administrador) :
                new ObjectParameter("Administrador", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_Sucursal", iDCiudadParameter, nombreParameter, direccionParameter, telefonoParameter, emailParameter, serieParameter, administradorParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_TipoDeducible(string nombre, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_TipoDeducible", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_TipoIdentificacion(string codigoSRI, string nombre, Nullable<bool> estado)
        {
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_TipoIdentificacion", codigoSRIParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int InsUpdDel_Permisos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsUpdDel_Permisos");
        }
    
        public virtual ObjectResult<Rpt_AperturaCajaUsuario_Result> Rpt_AperturaCajaUsuario(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_AperturaCajaUsuario_Result>("Rpt_AperturaCajaUsuario", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_CierreCajaUsuario_Result> Rpt_CierreCajaUsuario(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_CierreCajaUsuario_Result>("Rpt_CierreCajaUsuario", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_Factura_Result> Rpt_Factura(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Factura_Result>("Rpt_Factura", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_MovInventario_Result> Rpt_MovInventario(string accion, Nullable<int> iD, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_MovInventario_Result>("Rpt_MovInventario", accionParameter, iDParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Rpt_Proforma_Result> Rpt_Proforma(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Proforma_Result>("Rpt_Proforma", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_SubAperturaCajaUsuarioDet_Result> Rpt_SubAperturaCajaUsuarioDet(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SubAperturaCajaUsuarioDet_Result>("Rpt_SubAperturaCajaUsuarioDet", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_SubAperturaCajaUsuarioDetRubro_Result> Rpt_SubAperturaCajaUsuarioDetRubro(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SubAperturaCajaUsuarioDetRubro_Result>("Rpt_SubAperturaCajaUsuarioDetRubro", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_SubCierreCajaUsuario_Result> Rpt_SubCierreCajaUsuario(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SubCierreCajaUsuario_Result>("Rpt_SubCierreCajaUsuario", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_SubCierreCajaUsuarioDet_Result> Rpt_SubCierreCajaUsuarioDet(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SubCierreCajaUsuarioDet_Result>("Rpt_SubCierreCajaUsuarioDet", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_SubCierreCajaUsuarioDetRubro_Result> Rpt_SubCierreCajaUsuarioDetRubro(string accion, Nullable<int> iD)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SubCierreCajaUsuarioDetRubro_Result>("Rpt_SubCierreCajaUsuarioDetRubro", accionParameter, iDParameter);
        }
    
        public virtual ObjectResult<Rpt_TransaccionesUsuario_Result> Rpt_TransaccionesUsuario(string accion, Nullable<int> iDUsuario, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_TransaccionesUsuario_Result>("Rpt_TransaccionesUsuario", accionParameter, iDUsuarioParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Rpt_Ventas_Result> Rpt_Ventas(string accion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Ventas_Result>("Rpt_Ventas", accionParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<Sel_AperturaCaja_Result> Sel_AperturaCaja(string accion, Nullable<int> iD, Nullable<int> iDPtoVenta, Nullable<int> iDUsuario)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDPtoVentaParameter = iDPtoVenta.HasValue ?
                new ObjectParameter("IDPtoVenta", iDPtoVenta) :
                new ObjectParameter("IDPtoVenta", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_AperturaCaja_Result>("Sel_AperturaCaja", accionParameter, iDParameter, iDPtoVentaParameter, iDUsuarioParameter);
        }
    
        public virtual ObjectResult<Sel_Categoria_Result> Sel_Categoria(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Categoria_Result>("Sel_Categoria", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_CategoriaCliente_Result> Sel_CategoriaCliente(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_CategoriaCliente_Result>("Sel_CategoriaCliente", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_CategoriaProveedor_Result> Sel_CategoriaProveedor(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_CategoriaProveedor_Result>("Sel_CategoriaProveedor", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Ciudad_Result> Sel_Ciudad(string accion, Nullable<int> iD, string texto, Nullable<int> iDPais)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Ciudad_Result>("Sel_Ciudad", accionParameter, iDParameter, textoParameter, iDPaisParameter);
        }
    
        public virtual ObjectResult<Sel_Cliente_Result> Sel_Cliente(string accion, Nullable<int> iD, Nullable<int> tipoIdentificacion, string identificacion, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoIdentificacionParameter = tipoIdentificacion.HasValue ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Cliente_Result>("Sel_Cliente", accionParameter, iDParameter, tipoIdentificacionParameter, identificacionParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_ClienteEmail_Result> Sel_ClienteEmail(string accion, Nullable<int> iDCliente)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ClienteEmail_Result>("Sel_ClienteEmail", accionParameter, iDClienteParameter);
        }
    
        public virtual ObjectResult<Sel_ClienteInfoAdicional_Result> Sel_ClienteInfoAdicional(string accion, Nullable<int> iDCliente)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ClienteInfoAdicional_Result>("Sel_ClienteInfoAdicional", accionParameter, iDClienteParameter);
        }
    
        public virtual ObjectResult<Sel_Continente_Result> Sel_Continente(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Continente_Result>("Sel_Continente", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Denominacion_Result> Sel_Denominacion(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Denominacion_Result>("Sel_Denominacion", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_DesgloceRubro_Result> Sel_DesgloceRubro(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_DesgloceRubro_Result>("Sel_DesgloceRubro", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Documento_Result> Sel_Documento(string accion, Nullable<int> iD, string texto, Nullable<bool> sRI)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Documento_Result>("Sel_Documento", accionParameter, iDParameter, textoParameter, sRIParameter);
        }
    
        public virtual ObjectResult<Sel_Empresa_Result> Sel_Empresa(string accion, Nullable<int> iD, string rUC, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Empresa_Result>("Sel_Empresa", accionParameter, iDParameter, rUCParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Estacion_Result> Sel_Estacion(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Estacion_Result>("Sel_Estacion", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Fabricante_Result> Sel_Fabricante(string accion, Nullable<int> iD, string texto, Nullable<int> iDPais)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Fabricante_Result>("Sel_Fabricante", accionParameter, iDParameter, textoParameter, iDPaisParameter);
        }
    
        public virtual ObjectResult<Sel_FormaPago_Result> Sel_FormaPago(string accion, Nullable<int> iD, string texto, Nullable<bool> sRI)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_FormaPago_Result>("Sel_FormaPago", accionParameter, iDParameter, textoParameter, sRIParameter);
        }
    
        public virtual ObjectResult<Sel_Grupo_Result> Sel_Grupo(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Grupo_Result>("Sel_Grupo", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Impuesto_Result> Sel_Impuesto(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Impuesto_Result>("Sel_Impuesto", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_ImpuestoRetencion_Result> Sel_ImpuestoRetencion(string accion, Nullable<int> iD, string texto, string impuesto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var impuestoParameter = impuesto != null ?
                new ObjectParameter("Impuesto", impuesto) :
                new ObjectParameter("Impuesto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ImpuestoRetencion_Result>("Sel_ImpuestoRetencion", accionParameter, iDParameter, textoParameter, impuestoParameter);
        }
    
        public virtual ObjectResult<Sel_ImpuestoTarifa_Result> Sel_ImpuestoTarifa(string accion, Nullable<int> iD, string texto, string impuesto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var impuestoParameter = impuesto != null ?
                new ObjectParameter("Impuesto", impuesto) :
                new ObjectParameter("Impuesto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ImpuestoTarifa_Result>("Sel_ImpuestoTarifa", accionParameter, iDParameter, textoParameter, impuestoParameter);
        }
    
        public virtual ObjectResult<Sel_Inventario_Result> Sel_Inventario(string accion, Nullable<int> iDItem)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDItemParameter = iDItem.HasValue ?
                new ObjectParameter("IDItem", iDItem) :
                new ObjectParameter("IDItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Inventario_Result>("Sel_Inventario", accionParameter, iDItemParameter);
        }
    
        public virtual ObjectResult<Sel_Marca_Result> Sel_Marca(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Marca_Result>("Sel_Marca", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Medida_Result> Sel_Medida(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Medida_Result>("Sel_Medida", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Modulo_Result> Sel_Modulo(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Modulo_Result>("Sel_Modulo", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_MotivoMovInv_Result> Sel_MotivoMovInv(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_MotivoMovInv_Result>("Sel_MotivoMovInv", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_MovInvCab_Result> Sel_MovInvCab(string accion, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_MovInvCab_Result>("Sel_MovInvCab", accionParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Sel_MovInvDet_Result> Sel_MovInvDet(string accion, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_MovInvDet_Result>("Sel_MovInvDet", accionParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Sel_Objeto_Result> Sel_Objeto(string accion, Nullable<int> iD, string texto, Nullable<int> iDSubModulo, Nullable<int> iDPerfil)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDSubModuloParameter = iDSubModulo.HasValue ?
                new ObjectParameter("IDSubModulo", iDSubModulo) :
                new ObjectParameter("IDSubModulo", typeof(int));
    
            var iDPerfilParameter = iDPerfil.HasValue ?
                new ObjectParameter("IDPerfil", iDPerfil) :
                new ObjectParameter("IDPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Objeto_Result>("Sel_Objeto", accionParameter, iDParameter, textoParameter, iDSubModuloParameter, iDPerfilParameter);
        }
    
        public virtual ObjectResult<Sel_Pais_Result> Sel_Pais(string accion, Nullable<int> iD, string texto, Nullable<int> iDRegion)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDRegionParameter = iDRegion.HasValue ?
                new ObjectParameter("IDRegion", iDRegion) :
                new ObjectParameter("IDRegion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Pais_Result>("Sel_Pais", accionParameter, iDParameter, textoParameter, iDRegionParameter);
        }
    
        public virtual ObjectResult<Sel_Parametro_Result> Sel_Parametro(string accion, Nullable<int> iD, string nombre)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Parametro_Result>("Sel_Parametro", accionParameter, iDParameter, nombreParameter);
        }
    
        public virtual ObjectResult<Sel_Perfil_Result> Sel_Perfil(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Perfil_Result>("Sel_Perfil", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Permisos_Result> Sel_Permisos(string accion, Nullable<int> iDPerfil, Nullable<int> iDModulo, Nullable<int> iDSubModulo)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDPerfilParameter = iDPerfil.HasValue ?
                new ObjectParameter("IDPerfil", iDPerfil) :
                new ObjectParameter("IDPerfil", typeof(int));
    
            var iDModuloParameter = iDModulo.HasValue ?
                new ObjectParameter("IDModulo", iDModulo) :
                new ObjectParameter("IDModulo", typeof(int));
    
            var iDSubModuloParameter = iDSubModulo.HasValue ?
                new ObjectParameter("IDSubModulo", iDSubModulo) :
                new ObjectParameter("IDSubModulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Permisos_Result>("Sel_Permisos", accionParameter, iDPerfilParameter, iDModuloParameter, iDSubModuloParameter);
        }
    
        public virtual ObjectResult<Sel_Presentacion_Result> Sel_Presentacion(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Presentacion_Result>("Sel_Presentacion", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Producto_Result> Sel_Producto(string tipo, string texto, Nullable<int> sucursal, Nullable<int> iD, string codigo, Nullable<bool> itemStock)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var itemStockParameter = itemStock.HasValue ?
                new ObjectParameter("ItemStock", itemStock) :
                new ObjectParameter("ItemStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Producto_Result>("Sel_Producto", tipoParameter, textoParameter, sucursalParameter, iDParameter, codigoParameter, itemStockParameter);
        }
    
        public virtual ObjectResult<Sel_ProductoInfoAdicional_Result> Sel_ProductoInfoAdicional(string accion, Nullable<int> iDItem)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDItemParameter = iDItem.HasValue ?
                new ObjectParameter("IDItem", iDItem) :
                new ObjectParameter("IDItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ProductoInfoAdicional_Result>("Sel_ProductoInfoAdicional", accionParameter, iDItemParameter);
        }
    
        public virtual ObjectResult<Sel_ProductoNew_Result> Sel_ProductoNew(string accion, Nullable<int> iD, string codigo, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ProductoNew_Result>("Sel_ProductoNew", accionParameter, iDParameter, codigoParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Proveedor_Result> Sel_Proveedor(string accion, Nullable<int> iD, string identificacion, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Proveedor_Result>("Sel_Proveedor", accionParameter, iDParameter, identificacionParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_ProveedorEmail_Result> Sel_ProveedorEmail(string accion, Nullable<int> iDProveedor)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDProveedorParameter = iDProveedor.HasValue ?
                new ObjectParameter("IDProveedor", iDProveedor) :
                new ObjectParameter("IDProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ProveedorEmail_Result>("Sel_ProveedorEmail", accionParameter, iDProveedorParameter);
        }
    
        public virtual ObjectResult<Sel_ProveedorInfoAdicional_Result> Sel_ProveedorInfoAdicional(string accion, Nullable<int> iDProveedor)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDProveedorParameter = iDProveedor.HasValue ?
                new ObjectParameter("IDProveedor", iDProveedor) :
                new ObjectParameter("IDProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_ProveedorInfoAdicional_Result>("Sel_ProveedorInfoAdicional", accionParameter, iDProveedorParameter);
        }
    
        public virtual ObjectResult<Sel_PuntoVenta_Result> Sel_PuntoVenta(string accion, Nullable<int> iD, string serie, string texto, Nullable<int> iDSucursal)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDSucursalParameter = iDSucursal.HasValue ?
                new ObjectParameter("IDSucursal", iDSucursal) :
                new ObjectParameter("IDSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_PuntoVenta_Result>("Sel_PuntoVenta", accionParameter, iDParameter, serieParameter, textoParameter, iDSucursalParameter);
        }
    
        public virtual ObjectResult<Sel_RegionMundo_Result> Sel_RegionMundo(string accion, Nullable<int> iD, string texto, Nullable<int> iDContinente)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDContinenteParameter = iDContinente.HasValue ?
                new ObjectParameter("IDContinente", iDContinente) :
                new ObjectParameter("IDContinente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_RegionMundo_Result>("Sel_RegionMundo", accionParameter, iDParameter, textoParameter, iDContinenteParameter);
        }
    
        public virtual ObjectResult<Sel_RegularizarCostos_Result> Sel_RegularizarCostos(string accion)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_RegularizarCostos_Result>("Sel_RegularizarCostos", accionParameter);
        }
    
        public virtual ObjectResult<Sel_Rubro_Result> Sel_Rubro(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Rubro_Result>("Sel_Rubro", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_RubroFlujoCaja_Result> Sel_RubroFlujoCaja(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_RubroFlujoCaja_Result>("Sel_RubroFlujoCaja", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Sector_Result> Sel_Sector(string accion, Nullable<int> iD, string texto, Nullable<int> iDCiudad)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Sector_Result>("Sel_Sector", accionParameter, iDParameter, textoParameter, iDCiudadParameter);
        }
    
        public virtual ObjectResult<Sel_Stock_Result> Sel_Stock(string accion, Nullable<int> iD, string codigo, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Stock_Result>("Sel_Stock", accionParameter, iDParameter, codigoParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_SubGrupo_Result> Sel_SubGrupo(string accion, Nullable<int> iD, string texto, Nullable<int> iDGrupo)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDGrupoParameter = iDGrupo.HasValue ?
                new ObjectParameter("IDGrupo", iDGrupo) :
                new ObjectParameter("IDGrupo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_SubGrupo_Result>("Sel_SubGrupo", accionParameter, iDParameter, textoParameter, iDGrupoParameter);
        }
    
        public virtual ObjectResult<Sel_SubModulo_Result> Sel_SubModulo(string accion, Nullable<int> iD, string texto, Nullable<int> iDModulo)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var iDModuloParameter = iDModulo.HasValue ?
                new ObjectParameter("IDModulo", iDModulo) :
                new ObjectParameter("IDModulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_SubModulo_Result>("Sel_SubModulo", accionParameter, iDParameter, textoParameter, iDModuloParameter);
        }
    
        public virtual ObjectResult<Sel_Sucursal_Result> Sel_Sucursal(string accion, Nullable<int> iD, string serie, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Sucursal_Result>("Sel_Sucursal", accionParameter, iDParameter, serieParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_TipoDeducible_Result> Sel_TipoDeducible(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_TipoDeducible_Result>("Sel_TipoDeducible", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_TipoIdentificacion_Result> Sel_TipoIdentificacion(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_TipoIdentificacion_Result>("Sel_TipoIdentificacion", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Unidad_Result> Sel_Unidad(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Unidad_Result>("Sel_Unidad", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual ObjectResult<Sel_Usuario_Result> Sel_Usuario(string accion, Nullable<int> iD, string texto)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sel_Usuario_Result>("Sel_Usuario", accionParameter, iDParameter, textoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_GenerarRolPagos(Nullable<int> año, Nullable<int> mes)
        {
            var añoParameter = año.HasValue ?
                new ObjectParameter("Año", año) :
                new ObjectParameter("Año", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_GenerarRolPagos", añoParameter, mesParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_AperturaCaja(string accion, Nullable<int> iD, Nullable<int> iDPtoVta, Nullable<int> iDUsuario)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDPtoVtaParameter = iDPtoVta.HasValue ?
                new ObjectParameter("IDPtoVta", iDPtoVta) :
                new ObjectParameter("IDPtoVta", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_AperturaCaja", accionParameter, iDParameter, iDPtoVtaParameter, iDUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_CategoriaCliente(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_CategoriaCliente", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_CategoriaProveedor(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_CategoriaProveedor", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Ciudad(string accion, Nullable<int> iD, Nullable<int> iDPais, string nombre, string codigo, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Ciudad", accionParameter, iDParameter, iDPaisParameter, nombreParameter, codigoParameter, estadoParameter);
        }
    
        public virtual int Upd_Cliente(string accion, Nullable<int> iD, Nullable<int> iDCategoria, Nullable<int> iDCiudad, Nullable<int> iDTipoIdentificacion, string identificacion, string nombre, string direccion, string telefono, string celular, string email, Nullable<bool> sujetoRetencion, string tipoContribuyente, string tipoEntidad, string tipo, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var iDTipoIdentificacionParameter = iDTipoIdentificacion.HasValue ?
                new ObjectParameter("IDTipoIdentificacion", iDTipoIdentificacion) :
                new ObjectParameter("IDTipoIdentificacion", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sujetoRetencionParameter = sujetoRetencion.HasValue ?
                new ObjectParameter("SujetoRetencion", sujetoRetencion) :
                new ObjectParameter("SujetoRetencion", typeof(bool));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("TipoEntidad", tipoEntidad) :
                new ObjectParameter("TipoEntidad", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_Cliente", accionParameter, iDParameter, iDCategoriaParameter, iDCiudadParameter, iDTipoIdentificacionParameter, identificacionParameter, nombreParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, sujetoRetencionParameter, tipoContribuyenteParameter, tipoEntidadParameter, tipoParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Continente(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Continente", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Denominacion(string accion, Nullable<int> iD, string nombre, Nullable<decimal> valor, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Denominacion", accionParameter, iDParameter, nombreParameter, valorParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_DesgloceRubro(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_DesgloceRubro", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Documento(string accion, Nullable<int> iD, string nombre, string sigla, Nullable<bool> sRI, string codigoSRI, Nullable<bool> electronico, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("Sigla", sigla) :
                new ObjectParameter("Sigla", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var electronicoParameter = electronico.HasValue ?
                new ObjectParameter("Electronico", electronico) :
                new ObjectParameter("Electronico", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Documento", accionParameter, iDParameter, nombreParameter, siglaParameter, sRIParameter, codigoSRIParameter, electronicoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Empresa(string accion, Nullable<int> iD, Nullable<int> iDCiudad, string rUC, string razonSocial, string nombreComercial, string tipoContribuyente, Nullable<bool> obligContabilidad, Nullable<bool> contEspecial, string numResolucion, Nullable<System.DateTime> fechaResolucion, string direccion, string telefono, string celular, string email, string representNombre, string representIdentificacion, string representCelular, string representEmail, string contadorNombre, string contadorIdentificacion, string contadorCelular, string contadorEmail, byte[] logo, Nullable<bool> emisorFE, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var nombreComercialParameter = nombreComercial != null ?
                new ObjectParameter("NombreComercial", nombreComercial) :
                new ObjectParameter("NombreComercial", typeof(string));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var obligContabilidadParameter = obligContabilidad.HasValue ?
                new ObjectParameter("ObligContabilidad", obligContabilidad) :
                new ObjectParameter("ObligContabilidad", typeof(bool));
    
            var contEspecialParameter = contEspecial.HasValue ?
                new ObjectParameter("ContEspecial", contEspecial) :
                new ObjectParameter("ContEspecial", typeof(bool));
    
            var numResolucionParameter = numResolucion != null ?
                new ObjectParameter("NumResolucion", numResolucion) :
                new ObjectParameter("NumResolucion", typeof(string));
    
            var fechaResolucionParameter = fechaResolucion.HasValue ?
                new ObjectParameter("FechaResolucion", fechaResolucion) :
                new ObjectParameter("FechaResolucion", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var representNombreParameter = representNombre != null ?
                new ObjectParameter("RepresentNombre", representNombre) :
                new ObjectParameter("RepresentNombre", typeof(string));
    
            var representIdentificacionParameter = representIdentificacion != null ?
                new ObjectParameter("RepresentIdentificacion", representIdentificacion) :
                new ObjectParameter("RepresentIdentificacion", typeof(string));
    
            var representCelularParameter = representCelular != null ?
                new ObjectParameter("RepresentCelular", representCelular) :
                new ObjectParameter("RepresentCelular", typeof(string));
    
            var representEmailParameter = representEmail != null ?
                new ObjectParameter("RepresentEmail", representEmail) :
                new ObjectParameter("RepresentEmail", typeof(string));
    
            var contadorNombreParameter = contadorNombre != null ?
                new ObjectParameter("ContadorNombre", contadorNombre) :
                new ObjectParameter("ContadorNombre", typeof(string));
    
            var contadorIdentificacionParameter = contadorIdentificacion != null ?
                new ObjectParameter("ContadorIdentificacion", contadorIdentificacion) :
                new ObjectParameter("ContadorIdentificacion", typeof(string));
    
            var contadorCelularParameter = contadorCelular != null ?
                new ObjectParameter("ContadorCelular", contadorCelular) :
                new ObjectParameter("ContadorCelular", typeof(string));
    
            var contadorEmailParameter = contadorEmail != null ?
                new ObjectParameter("ContadorEmail", contadorEmail) :
                new ObjectParameter("ContadorEmail", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(byte[]));
    
            var emisorFEParameter = emisorFE.HasValue ?
                new ObjectParameter("EmisorFE", emisorFE) :
                new ObjectParameter("EmisorFE", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Empresa", accionParameter, iDParameter, iDCiudadParameter, rUCParameter, razonSocialParameter, nombreComercialParameter, tipoContribuyenteParameter, obligContabilidadParameter, contEspecialParameter, numResolucionParameter, fechaResolucionParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, representNombreParameter, representIdentificacionParameter, representCelularParameter, representEmailParameter, contadorNombreParameter, contadorIdentificacionParameter, contadorCelularParameter, contadorEmailParameter, logoParameter, emisorFEParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Estacion(string accion, Nullable<int> iD, string nombre, string tipo, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Estacion", accionParameter, iDParameter, nombreParameter, tipoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Fabricante(string accion, Nullable<int> iD, Nullable<int> iDPais, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDPaisParameter = iDPais.HasValue ?
                new ObjectParameter("IDPais", iDPais) :
                new ObjectParameter("IDPais", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Fabricante", accionParameter, iDParameter, iDPaisParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_FormaPago(string accion, Nullable<int> iD, string codigoSRI, string nombre, Nullable<bool> sRI, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var sRIParameter = sRI.HasValue ?
                new ObjectParameter("SRI", sRI) :
                new ObjectParameter("SRI", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_FormaPago", accionParameter, iDParameter, codigoSRIParameter, nombreParameter, sRIParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Impuesto(string accion, Nullable<int> iD, string codigo, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Impuesto", accionParameter, iDParameter, codigoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_ImpuestoRetencion(string accion, Nullable<int> iD, Nullable<int> iDImpuesto, string codigo, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<bool> personaNatural, Nullable<bool> personaJuridica, Nullable<bool> bienes, Nullable<bool> servicios, Nullable<bool> otros, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDImpuestoParameter = iDImpuesto.HasValue ?
                new ObjectParameter("IDImpuesto", iDImpuesto) :
                new ObjectParameter("IDImpuesto", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var personaNaturalParameter = personaNatural.HasValue ?
                new ObjectParameter("PersonaNatural", personaNatural) :
                new ObjectParameter("PersonaNatural", typeof(bool));
    
            var personaJuridicaParameter = personaJuridica.HasValue ?
                new ObjectParameter("PersonaJuridica", personaJuridica) :
                new ObjectParameter("PersonaJuridica", typeof(bool));
    
            var bienesParameter = bienes.HasValue ?
                new ObjectParameter("Bienes", bienes) :
                new ObjectParameter("Bienes", typeof(bool));
    
            var serviciosParameter = servicios.HasValue ?
                new ObjectParameter("Servicios", servicios) :
                new ObjectParameter("Servicios", typeof(bool));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_ImpuestoRetencion", accionParameter, iDParameter, iDImpuestoParameter, codigoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, personaNaturalParameter, personaJuridicaParameter, bienesParameter, serviciosParameter, otrosParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_ImpuestoTarifa(string accion, Nullable<int> iD, Nullable<int> iDImpuesto, string nombre, string codigoSRI, Nullable<decimal> porcentaje, Nullable<decimal> valor, string tipoTarifa, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDImpuestoParameter = iDImpuesto.HasValue ?
                new ObjectParameter("IDImpuesto", iDImpuesto) :
                new ObjectParameter("IDImpuesto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(decimal));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var tipoTarifaParameter = tipoTarifa != null ?
                new ObjectParameter("TipoTarifa", tipoTarifa) :
                new ObjectParameter("TipoTarifa", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_ImpuestoTarifa", accionParameter, iDParameter, iDImpuestoParameter, nombreParameter, codigoSRIParameter, porcentajeParameter, valorParameter, tipoTarifaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Marca(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Marca", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Modulo(string accion, Nullable<int> iD, string nombre, Nullable<short> orden, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Modulo", accionParameter, iDParameter, nombreParameter, ordenParameter, estadoParameter);
        }
    
        public virtual int Upd_ModuloOrden()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_ModuloOrden");
        }
    
        public virtual ObjectResult<string> Upd_MovInv(string accion, Nullable<int> iDMO, Nullable<int> iDUS, Nullable<int> iDSU)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDMOParameter = iDMO.HasValue ?
                new ObjectParameter("IDMO", iDMO) :
                new ObjectParameter("IDMO", typeof(int));
    
            var iDUSParameter = iDUS.HasValue ?
                new ObjectParameter("IDUS", iDUS) :
                new ObjectParameter("IDUS", typeof(int));
    
            var iDSUParameter = iDSU.HasValue ?
                new ObjectParameter("IDSU", iDSU) :
                new ObjectParameter("IDSU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Upd_MovInv", accionParameter, iDMOParameter, iDUSParameter, iDSUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Objeto(string accion, Nullable<int> iD, Nullable<int> iDSubModulo, string ensamblado, string nombre, string titulo, string tipo, Nullable<bool> ejecutable, Nullable<short> orden, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDSubModuloParameter = iDSubModulo.HasValue ?
                new ObjectParameter("IDSubModulo", iDSubModulo) :
                new ObjectParameter("IDSubModulo", typeof(int));
    
            var ensambladoParameter = ensamblado != null ?
                new ObjectParameter("Ensamblado", ensamblado) :
                new ObjectParameter("Ensamblado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var ejecutableParameter = ejecutable.HasValue ?
                new ObjectParameter("Ejecutable", ejecutable) :
                new ObjectParameter("Ejecutable", typeof(bool));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Objeto", accionParameter, iDParameter, iDSubModuloParameter, ensambladoParameter, nombreParameter, tituloParameter, tipoParameter, ejecutableParameter, ordenParameter, estadoParameter);
        }
    
        public virtual int Upd_ObjetoOrden()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_ObjetoOrden");
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Pais(string accion, Nullable<int> iD, Nullable<int> iDRegion, string nombre, string codigo, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDRegionParameter = iDRegion.HasValue ?
                new ObjectParameter("IDRegion", iDRegion) :
                new ObjectParameter("IDRegion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Pais", accionParameter, iDParameter, iDRegionParameter, nombreParameter, codigoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Perfil(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Perfil", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Producto(Nullable<int> iDPD, Nullable<int> iDFB, Nullable<int> iDCT, Nullable<int> iDGP, Nullable<int> iDSG, Nullable<int> iDPRE, Nullable<int> iDMD, Nullable<int> iDUnidad, string codigo, string nombre, Nullable<decimal> costo, Nullable<decimal> pVP, Nullable<decimal> pVM, Nullable<decimal> descuento, Nullable<bool> iVA, Nullable<decimal> comision, Nullable<decimal> pCP, string tipo, Nullable<bool> estado, byte[] imagen)
        {
            var iDPDParameter = iDPD.HasValue ?
                new ObjectParameter("IDPD", iDPD) :
                new ObjectParameter("IDPD", typeof(int));
    
            var iDFBParameter = iDFB.HasValue ?
                new ObjectParameter("IDFB", iDFB) :
                new ObjectParameter("IDFB", typeof(int));
    
            var iDCTParameter = iDCT.HasValue ?
                new ObjectParameter("IDCT", iDCT) :
                new ObjectParameter("IDCT", typeof(int));
    
            var iDGPParameter = iDGP.HasValue ?
                new ObjectParameter("IDGP", iDGP) :
                new ObjectParameter("IDGP", typeof(int));
    
            var iDSGParameter = iDSG.HasValue ?
                new ObjectParameter("IDSG", iDSG) :
                new ObjectParameter("IDSG", typeof(int));
    
            var iDPREParameter = iDPRE.HasValue ?
                new ObjectParameter("IDPRE", iDPRE) :
                new ObjectParameter("IDPRE", typeof(int));
    
            var iDMDParameter = iDMD.HasValue ?
                new ObjectParameter("IDMD", iDMD) :
                new ObjectParameter("IDMD", typeof(int));
    
            var iDUnidadParameter = iDUnidad.HasValue ?
                new ObjectParameter("IDUnidad", iDUnidad) :
                new ObjectParameter("IDUnidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            var pVPParameter = pVP.HasValue ?
                new ObjectParameter("PVP", pVP) :
                new ObjectParameter("PVP", typeof(decimal));
    
            var pVMParameter = pVM.HasValue ?
                new ObjectParameter("PVM", pVM) :
                new ObjectParameter("PVM", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(decimal));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(bool));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(decimal));
    
            var pCPParameter = pCP.HasValue ?
                new ObjectParameter("PCP", pCP) :
                new ObjectParameter("PCP", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Producto", iDPDParameter, iDFBParameter, iDCTParameter, iDGPParameter, iDSGParameter, iDPREParameter, iDMDParameter, iDUnidadParameter, codigoParameter, nombreParameter, costoParameter, pVPParameter, pVMParameter, descuentoParameter, iVAParameter, comisionParameter, pCPParameter, tipoParameter, estadoParameter, imagenParameter);
        }
    
        public virtual int Upd_ProductoNew(string accion, Nullable<int> iD, Nullable<int> iDUsuario, Nullable<int> iDFabricante, Nullable<int> iDCategoria, Nullable<int> iDGrupo, Nullable<int> iDSubGrupo, Nullable<int> iDPresentacion, Nullable<int> iDMarca, Nullable<int> iDUnidad, Nullable<int> iDDeducible, Nullable<int> iDIVA, Nullable<int> iDIRBP, Nullable<int> iDICE, Nullable<int> iDRetencionIVA, Nullable<int> iDRetencionIR, string codigo, string codigoExterno, string nombre, Nullable<decimal> costo, Nullable<decimal> pCP, Nullable<decimal> pVP, Nullable<decimal> pVM, string tipo, Nullable<bool> iVA, Nullable<bool> iRBP, Nullable<bool> iCE, Nullable<bool> serie, Nullable<bool> combo, Nullable<decimal> minimo, Nullable<decimal> maximo, string observaciones, Nullable<bool> estado, byte[] imagen, ObjectParameter iDDuplicado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDFabricanteParameter = iDFabricante.HasValue ?
                new ObjectParameter("IDFabricante", iDFabricante) :
                new ObjectParameter("IDFabricante", typeof(int));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDGrupoParameter = iDGrupo.HasValue ?
                new ObjectParameter("IDGrupo", iDGrupo) :
                new ObjectParameter("IDGrupo", typeof(int));
    
            var iDSubGrupoParameter = iDSubGrupo.HasValue ?
                new ObjectParameter("IDSubGrupo", iDSubGrupo) :
                new ObjectParameter("IDSubGrupo", typeof(int));
    
            var iDPresentacionParameter = iDPresentacion.HasValue ?
                new ObjectParameter("IDPresentacion", iDPresentacion) :
                new ObjectParameter("IDPresentacion", typeof(int));
    
            var iDMarcaParameter = iDMarca.HasValue ?
                new ObjectParameter("IDMarca", iDMarca) :
                new ObjectParameter("IDMarca", typeof(int));
    
            var iDUnidadParameter = iDUnidad.HasValue ?
                new ObjectParameter("IDUnidad", iDUnidad) :
                new ObjectParameter("IDUnidad", typeof(int));
    
            var iDDeducibleParameter = iDDeducible.HasValue ?
                new ObjectParameter("IDDeducible", iDDeducible) :
                new ObjectParameter("IDDeducible", typeof(int));
    
            var iDIVAParameter = iDIVA.HasValue ?
                new ObjectParameter("IDIVA", iDIVA) :
                new ObjectParameter("IDIVA", typeof(int));
    
            var iDIRBPParameter = iDIRBP.HasValue ?
                new ObjectParameter("IDIRBP", iDIRBP) :
                new ObjectParameter("IDIRBP", typeof(int));
    
            var iDICEParameter = iDICE.HasValue ?
                new ObjectParameter("IDICE", iDICE) :
                new ObjectParameter("IDICE", typeof(int));
    
            var iDRetencionIVAParameter = iDRetencionIVA.HasValue ?
                new ObjectParameter("IDRetencionIVA", iDRetencionIVA) :
                new ObjectParameter("IDRetencionIVA", typeof(int));
    
            var iDRetencionIRParameter = iDRetencionIR.HasValue ?
                new ObjectParameter("IDRetencionIR", iDRetencionIR) :
                new ObjectParameter("IDRetencionIR", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoExternoParameter = codigoExterno != null ?
                new ObjectParameter("CodigoExterno", codigoExterno) :
                new ObjectParameter("CodigoExterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            var pCPParameter = pCP.HasValue ?
                new ObjectParameter("PCP", pCP) :
                new ObjectParameter("PCP", typeof(decimal));
    
            var pVPParameter = pVP.HasValue ?
                new ObjectParameter("PVP", pVP) :
                new ObjectParameter("PVP", typeof(decimal));
    
            var pVMParameter = pVM.HasValue ?
                new ObjectParameter("PVM", pVM) :
                new ObjectParameter("PVM", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(bool));
    
            var iRBPParameter = iRBP.HasValue ?
                new ObjectParameter("IRBP", iRBP) :
                new ObjectParameter("IRBP", typeof(bool));
    
            var iCEParameter = iCE.HasValue ?
                new ObjectParameter("ICE", iCE) :
                new ObjectParameter("ICE", typeof(bool));
    
            var serieParameter = serie.HasValue ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(bool));
    
            var comboParameter = combo.HasValue ?
                new ObjectParameter("Combo", combo) :
                new ObjectParameter("Combo", typeof(bool));
    
            var minimoParameter = minimo.HasValue ?
                new ObjectParameter("Minimo", minimo) :
                new ObjectParameter("Minimo", typeof(decimal));
    
            var maximoParameter = maximo.HasValue ?
                new ObjectParameter("Maximo", maximo) :
                new ObjectParameter("Maximo", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_ProductoNew", accionParameter, iDParameter, iDUsuarioParameter, iDFabricanteParameter, iDCategoriaParameter, iDGrupoParameter, iDSubGrupoParameter, iDPresentacionParameter, iDMarcaParameter, iDUnidadParameter, iDDeducibleParameter, iDIVAParameter, iDIRBPParameter, iDICEParameter, iDRetencionIVAParameter, iDRetencionIRParameter, codigoParameter, codigoExternoParameter, nombreParameter, costoParameter, pCPParameter, pVPParameter, pVMParameter, tipoParameter, iVAParameter, iRBPParameter, iCEParameter, serieParameter, comboParameter, minimoParameter, maximoParameter, observacionesParameter, estadoParameter, imagenParameter, iDDuplicado);
        }
    
        public virtual int Upd_Proveedor(string accion, Nullable<int> iD, Nullable<int> iDCategoria, Nullable<int> iDCiudad, Nullable<int> iDTipoIdentificacion, string identificacion, string nombre, string direccion, string telefono, string celular, string email, Nullable<bool> sujetoRetencion, string tipoContribuyente, string tipoEntidad, string tipoEmisor, string autorizacionSRI, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var iDTipoIdentificacionParameter = iDTipoIdentificacion.HasValue ?
                new ObjectParameter("IDTipoIdentificacion", iDTipoIdentificacion) :
                new ObjectParameter("IDTipoIdentificacion", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sujetoRetencionParameter = sujetoRetencion.HasValue ?
                new ObjectParameter("SujetoRetencion", sujetoRetencion) :
                new ObjectParameter("SujetoRetencion", typeof(bool));
    
            var tipoContribuyenteParameter = tipoContribuyente != null ?
                new ObjectParameter("TipoContribuyente", tipoContribuyente) :
                new ObjectParameter("TipoContribuyente", typeof(string));
    
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("TipoEntidad", tipoEntidad) :
                new ObjectParameter("TipoEntidad", typeof(string));
    
            var tipoEmisorParameter = tipoEmisor != null ?
                new ObjectParameter("TipoEmisor", tipoEmisor) :
                new ObjectParameter("TipoEmisor", typeof(string));
    
            var autorizacionSRIParameter = autorizacionSRI != null ?
                new ObjectParameter("AutorizacionSRI", autorizacionSRI) :
                new ObjectParameter("AutorizacionSRI", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_Proveedor", accionParameter, iDParameter, iDCategoriaParameter, iDCiudadParameter, iDTipoIdentificacionParameter, identificacionParameter, nombreParameter, direccionParameter, telefonoParameter, celularParameter, emailParameter, sujetoRetencionParameter, tipoContribuyenteParameter, tipoEntidadParameter, tipoEmisorParameter, autorizacionSRIParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_RegionMundo(string accion, Nullable<int> iD, Nullable<int> iDContinente, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDContinenteParameter = iDContinente.HasValue ?
                new ObjectParameter("IDContinente", iDContinente) :
                new ObjectParameter("IDContinente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_RegionMundo", accionParameter, iDParameter, iDContinenteParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Sector(string accion, Nullable<int> iD, Nullable<int> iDCiudad, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Sector", accionParameter, iDParameter, iDCiudadParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_SubModulo(string accion, Nullable<int> iD, Nullable<int> iDModulo, string nombre, Nullable<short> orden, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDModuloParameter = iDModulo.HasValue ?
                new ObjectParameter("IDModulo", iDModulo) :
                new ObjectParameter("IDModulo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_SubModulo", accionParameter, iDParameter, iDModuloParameter, nombreParameter, ordenParameter, estadoParameter);
        }
    
        public virtual int Upd_SubModuloOrden()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upd_SubModuloOrden");
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_Sucursal(string accion, Nullable<int> iD, Nullable<int> iDCiudad, string nombre, string direccion, string telefono, string email, string serie, string administrador, Nullable<bool> estado, ObjectParameter iDDuplicado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDCiudadParameter = iDCiudad.HasValue ?
                new ObjectParameter("IDCiudad", iDCiudad) :
                new ObjectParameter("IDCiudad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var administradorParameter = administrador != null ?
                new ObjectParameter("Administrador", administrador) :
                new ObjectParameter("Administrador", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_Sucursal", accionParameter, iDParameter, iDCiudadParameter, nombreParameter, direccionParameter, telefonoParameter, emailParameter, serieParameter, administradorParameter, estadoParameter, iDDuplicado);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_TipoDeducible(string accion, Nullable<int> iD, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_TipoDeducible", accionParameter, iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Upd_TipoIdentificacion(string accion, Nullable<int> iD, string codigoSRI, string nombre, Nullable<bool> estado)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoSRIParameter = codigoSRI != null ?
                new ObjectParameter("CodigoSRI", codigoSRI) :
                new ObjectParameter("CodigoSRI", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Upd_TipoIdentificacion", accionParameter, iDParameter, codigoSRIParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int Actualizar(string nameServer, string baseDatos, string tabla)
        {
            var nameServerParameter = nameServer != null ?
                new ObjectParameter("NameServer", nameServer) :
                new ObjectParameter("NameServer", typeof(string));
    
            var baseDatosParameter = baseDatos != null ?
                new ObjectParameter("BaseDatos", baseDatos) :
                new ObjectParameter("BaseDatos", typeof(string));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualizar", nameServerParameter, baseDatosParameter, tablaParameter);
        }
    
        public virtual int CRUD(string nameServer, string baseDatos, string tabla)
        {
            var nameServerParameter = nameServer != null ?
                new ObjectParameter("NameServer", nameServer) :
                new ObjectParameter("NameServer", typeof(string));
    
            var baseDatosParameter = baseDatos != null ?
                new ObjectParameter("BaseDatos", baseDatos) :
                new ObjectParameter("BaseDatos", typeof(string));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRUD", nameServerParameter, baseDatosParameter, tablaParameter);
        }
    
        public virtual int Eliminar(string nameServer, string baseDatos, string tabla)
        {
            var nameServerParameter = nameServer != null ?
                new ObjectParameter("NameServer", nameServer) :
                new ObjectParameter("NameServer", typeof(string));
    
            var baseDatosParameter = baseDatos != null ?
                new ObjectParameter("BaseDatos", baseDatos) :
                new ObjectParameter("BaseDatos", typeof(string));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Eliminar", nameServerParameter, baseDatosParameter, tablaParameter);
        }
    
        public virtual int Insertar(string nameServer, string baseDatos, string tabla)
        {
            var nameServerParameter = nameServer != null ?
                new ObjectParameter("NameServer", nameServer) :
                new ObjectParameter("NameServer", typeof(string));
    
            var baseDatosParameter = baseDatos != null ?
                new ObjectParameter("BaseDatos", baseDatos) :
                new ObjectParameter("BaseDatos", typeof(string));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar", nameServerParameter, baseDatosParameter, tablaParameter);
        }
    }
}
